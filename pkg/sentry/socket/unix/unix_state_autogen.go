// automatically generated by stateify.

package unix

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *SocketOperations) StateTypeName() string {
	return "pkg/sentry/socket/unix.SocketOperations"
}

func (x *SocketOperations) StateFields() []string {
	return []string{
		"socketOpsCommon",
	}
}

func (x *SocketOperations) beforeSave() {}

func (x *SocketOperations) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.socketOpsCommon)
}

func (x *SocketOperations) afterLoad() {}

func (x *SocketOperations) StateLoad(m state.Source) {
	m.Load(0, &x.socketOpsCommon)
}

func (x *socketOpsCommon) StateTypeName() string {
	return "pkg/sentry/socket/unix.socketOpsCommon"
}

func (x *socketOpsCommon) StateFields() []string {
	return []string{
		"AtomicRefCount",
		"SendReceiveTimeout",
		"ep",
		"stype",
	}
}

func (x *socketOpsCommon) beforeSave() {}

func (x *socketOpsCommon) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.AtomicRefCount)
	m.Save(1, &x.SendReceiveTimeout)
	m.Save(2, &x.ep)
	m.Save(3, &x.stype)
}

func (x *socketOpsCommon) afterLoad() {}

func (x *socketOpsCommon) StateLoad(m state.Source) {
	m.Load(0, &x.AtomicRefCount)
	m.Load(1, &x.SendReceiveTimeout)
	m.Load(2, &x.ep)
	m.Load(3, &x.stype)
}

func init() {
	state.Register((*SocketOperations)(nil))
	state.Register((*socketOpsCommon)(nil))
}
