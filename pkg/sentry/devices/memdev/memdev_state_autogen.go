// automatically generated by stateify.

package memdev

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *fullDevice) StateTypeName() string {
	return "pkg/sentry/devices/memdev.fullDevice"
}

func (x *fullDevice) StateFields() []string {
	return []string{}
}

func (x *fullDevice) beforeSave() {}

func (x *fullDevice) StateSave(m state.Sink) {
	x.beforeSave()
}

func (x *fullDevice) afterLoad() {}

func (x *fullDevice) StateLoad(m state.Source) {
}

func (x *fullFD) StateTypeName() string {
	return "pkg/sentry/devices/memdev.fullFD"
}

func (x *fullFD) StateFields() []string {
	return []string{
		"vfsfd",
		"FileDescriptionDefaultImpl",
		"DentryMetadataFileDescriptionImpl",
		"NoLockFD",
	}
}

func (x *fullFD) beforeSave() {}

func (x *fullFD) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.vfsfd)
	m.Save(1, &x.FileDescriptionDefaultImpl)
	m.Save(2, &x.DentryMetadataFileDescriptionImpl)
	m.Save(3, &x.NoLockFD)
}

func (x *fullFD) afterLoad() {}

func (x *fullFD) StateLoad(m state.Source) {
	m.Load(0, &x.vfsfd)
	m.Load(1, &x.FileDescriptionDefaultImpl)
	m.Load(2, &x.DentryMetadataFileDescriptionImpl)
	m.Load(3, &x.NoLockFD)
}

func (x *nullDevice) StateTypeName() string {
	return "pkg/sentry/devices/memdev.nullDevice"
}

func (x *nullDevice) StateFields() []string {
	return []string{}
}

func (x *nullDevice) beforeSave() {}

func (x *nullDevice) StateSave(m state.Sink) {
	x.beforeSave()
}

func (x *nullDevice) afterLoad() {}

func (x *nullDevice) StateLoad(m state.Source) {
}

func (x *nullFD) StateTypeName() string {
	return "pkg/sentry/devices/memdev.nullFD"
}

func (x *nullFD) StateFields() []string {
	return []string{
		"vfsfd",
		"FileDescriptionDefaultImpl",
		"DentryMetadataFileDescriptionImpl",
		"NoLockFD",
	}
}

func (x *nullFD) beforeSave() {}

func (x *nullFD) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.vfsfd)
	m.Save(1, &x.FileDescriptionDefaultImpl)
	m.Save(2, &x.DentryMetadataFileDescriptionImpl)
	m.Save(3, &x.NoLockFD)
}

func (x *nullFD) afterLoad() {}

func (x *nullFD) StateLoad(m state.Source) {
	m.Load(0, &x.vfsfd)
	m.Load(1, &x.FileDescriptionDefaultImpl)
	m.Load(2, &x.DentryMetadataFileDescriptionImpl)
	m.Load(3, &x.NoLockFD)
}

func (x *randomDevice) StateTypeName() string {
	return "pkg/sentry/devices/memdev.randomDevice"
}

func (x *randomDevice) StateFields() []string {
	return []string{}
}

func (x *randomDevice) beforeSave() {}

func (x *randomDevice) StateSave(m state.Sink) {
	x.beforeSave()
}

func (x *randomDevice) afterLoad() {}

func (x *randomDevice) StateLoad(m state.Source) {
}

func (x *randomFD) StateTypeName() string {
	return "pkg/sentry/devices/memdev.randomFD"
}

func (x *randomFD) StateFields() []string {
	return []string{
		"vfsfd",
		"FileDescriptionDefaultImpl",
		"DentryMetadataFileDescriptionImpl",
		"NoLockFD",
		"off",
	}
}

func (x *randomFD) beforeSave() {}

func (x *randomFD) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.vfsfd)
	m.Save(1, &x.FileDescriptionDefaultImpl)
	m.Save(2, &x.DentryMetadataFileDescriptionImpl)
	m.Save(3, &x.NoLockFD)
	m.Save(4, &x.off)
}

func (x *randomFD) afterLoad() {}

func (x *randomFD) StateLoad(m state.Source) {
	m.Load(0, &x.vfsfd)
	m.Load(1, &x.FileDescriptionDefaultImpl)
	m.Load(2, &x.DentryMetadataFileDescriptionImpl)
	m.Load(3, &x.NoLockFD)
	m.Load(4, &x.off)
}

func (x *zeroDevice) StateTypeName() string {
	return "pkg/sentry/devices/memdev.zeroDevice"
}

func (x *zeroDevice) StateFields() []string {
	return []string{}
}

func (x *zeroDevice) beforeSave() {}

func (x *zeroDevice) StateSave(m state.Sink) {
	x.beforeSave()
}

func (x *zeroDevice) afterLoad() {}

func (x *zeroDevice) StateLoad(m state.Source) {
}

func (x *zeroFD) StateTypeName() string {
	return "pkg/sentry/devices/memdev.zeroFD"
}

func (x *zeroFD) StateFields() []string {
	return []string{
		"vfsfd",
		"FileDescriptionDefaultImpl",
		"DentryMetadataFileDescriptionImpl",
		"NoLockFD",
	}
}

func (x *zeroFD) beforeSave() {}

func (x *zeroFD) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.vfsfd)
	m.Save(1, &x.FileDescriptionDefaultImpl)
	m.Save(2, &x.DentryMetadataFileDescriptionImpl)
	m.Save(3, &x.NoLockFD)
}

func (x *zeroFD) afterLoad() {}

func (x *zeroFD) StateLoad(m state.Source) {
	m.Load(0, &x.vfsfd)
	m.Load(1, &x.FileDescriptionDefaultImpl)
	m.Load(2, &x.DentryMetadataFileDescriptionImpl)
	m.Load(3, &x.NoLockFD)
}

func init() {
	state.Register((*fullDevice)(nil))
	state.Register((*fullFD)(nil))
	state.Register((*nullDevice)(nil))
	state.Register((*nullFD)(nil))
	state.Register((*randomDevice)(nil))
	state.Register((*randomFD)(nil))
	state.Register((*zeroDevice)(nil))
	state.Register((*zeroFD)(nil))
}
